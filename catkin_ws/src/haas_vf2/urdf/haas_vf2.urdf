<?xml version="1.0"?>
<robot name="haas_vf2">

  <material name="blue">
    <color rgba="0 0 0.8 0.62"/>
  </material>

  <material name="white">
    <color rgba="1 1 1 0.62"/>
  </material>

  <material name="green">
    <color rgba="0 1 0 0.62"/>
  </material>


  <link name="base_link">
    <visual>
        <geometry>
            <box size="0.001 0.001 0.001"/>
        </geometry>

    </visual>
    <collision>
        <geometry>
            <box size="0.001 0.001 0.001"/>

        </geometry>
    </collision>
  </link>

  <link name="vf2_base_link">
    <visual>
      <geometry>
        <mesh filename="package://haas_vf2/meshes/Body2.stl"/>
      </geometry>
      <material name="blue"/>
      <origin rpy="1.57079 0 0" xyz="0 0 0"/>
    </visual>
    <inertial>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <mass value="3" />
        <inertia
          ixx="0.0" ixy="0.0" ixz="0.0"
          iyy="0.0" iyz="0.0"
          izz="0.0" />
    </inertial>
  </link>

  <link name="y_axis_slide">
    <visual>
      <geometry>
        <mesh filename="package://haas_vf2/meshes/Body3.stl"/>
      </geometry>
      <origin rpy="1.57079 0 0" xyz="0 0 0"/>
      <material name="green"/>
    </visual>
    <inertial>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <mass value="2" />
        <inertia
          ixx="0.0" ixy="0.0" ixz="0.0"
          iyy="0.0" iyz="0.0"
          izz="0.0" />
    </inertial>
  </link>

  <link name="x_axis_table">
    <visual>
      <geometry>
        <mesh filename="package://haas_vf2/meshes/Body8.stl"/>
      </geometry>
      <origin rpy="1.57079 0 0" xyz="0 0 0"/>
      <material name="white"/>
    </visual>
    <inertial>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <mass value="1" />
        <inertia
          ixx="0.0" ixy="0.0" ixz="0.0"
          iyy="0.0" iyz="0.0"
          izz="0.0" />
    </inertial>
  </link>

  <joint name="base_to_vf2" type="fixed">
    <parent link="base_link"/>
    <child link="vf2_base_link"/>
    <origin xyz="0 0 0"/>
  </joint>

  <joint name="base_to_y_axis" type="prismatic">
    <parent link="vf2_base_link"/>
    <child link="y_axis_slide"/>
    <origin xyz="0 0 0"/>
    <!-- Here we define the axis along which the geometry is moved -->
    <axis xyz="0 1 0"/>
    <!-- Here we define the joint's upper and lower limits -->
    <limit effort="1000.0" lower="0.0" upper="25" velocity="10"/>
  </joint>

  <joint name="y_axis_to_x_axis" type="prismatic">
    <parent link="y_axis_slide"/>
    <child link="x_axis_table"/>
    <origin  xyz="0 0 0"/>
    <!-- Here we define the axis along which the geometry is moved -->
    <axis xyz="1 0 0"/>
    <!-- Here we define the joint's upper and lower limits -->
    <limit effort="1000.0" lower="0.0" upper="25" velocity="10"/>
  </joint>

 
    <!-- This block provides the simulator (Gazebo) with information on a few additionalphysical properties. See http://gazebosim.org/tutorials/?tut=ros_urdf for more-->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>/</robotNamespace>
        </plugin>
    </gazebo>

    <!-- This block connects the wheel joint to an actuator (motor), which informs bothsimulation and visualization of the robot -->
    <transmission name="y_axis_to_x_axis_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="y_axis_to_x_axis_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="y_axis_to_x_axis">
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
    </transmission>

    <transmission name="base_to_y_axis_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="base_to_y_axis_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="base_to_y_axis">
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
    </transmission>
    

</robot>